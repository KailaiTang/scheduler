{"ast":null,"code":"var _jsxFileName = \"/Users/tangkailai/Desktop/NU_CS/CS_497/scheduler/src/App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst schedule = {\n  \"title\": \"CS Courses for 2018-2019\",\n  \"courses\": {\n    \"F101\": {\n      \"id\": \"F101\",\n      \"meets\": \"MWF 11:00-11:50\",\n      \"title\": \"Computer Science: Concepts, Philosophy, and Connections\"\n    },\n    \"F110\": {\n      \"id\": \"F110\",\n      \"meets\": \"MWF 10:00-10:50\",\n      \"title\": \"Intro Programming for non-majors\"\n    },\n    \"S313\": {\n      \"id\": \"S313\",\n      \"meets\": \"TuTh 15:30-16:50\",\n      \"title\": \"Tangible Interaction Design and Learning\"\n    },\n    \"S314\": {\n      \"id\": \"S314\",\n      \"meets\": \"TuTh 9:30-10:50\",\n      \"title\": \"Tech & Human Interaction\"\n    }\n  }\n};\n\nconst Banner = ({\n  title\n}) => /*#__PURE__*/_jsxDEV(\"h1\", {\n  children: title\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 31,\n  columnNumber: 3\n}, this);\n\n_c = Banner;\n\nconst CourseList = ({\n  courses\n}) => {\n  _s();\n\n  const [term, setTerm] = useState('Fall');\n  const [selected, setSelected] = useState([]);\n  const termCourses = Object.values(courses).filter(course => term === getCourseTerm(course));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TermSelector, {\n      term: term,\n      setTerm: setTerm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"course-list\",\n      children: termCourses.map(course => /*#__PURE__*/_jsxDEV(Course, {\n        course: course,\n        selected: selected,\n        setSelected: setSelected\n      }, course.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CourseList, \"h0WUCS4RgDfJRjhlk8hM/990ywg=\");\n\n_c2 = CourseList;\nconst terms = {\n  F: 'Fall',\n  W: 'Winter',\n  S: 'Spring'\n};\n\nconst TermButton = ({\n  term,\n  setTerm,\n  checked\n}) => /*#__PURE__*/_jsxDEV(_Fragment, {\n  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n    type: \"radio\",\n    id: term,\n    className: \"btn-check\",\n    checked: checked,\n    autoComplete: \"off\",\n    onChange: () => setTerm(term)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n    class: \"btn btn-success m-1 p-2\",\n    htmlFor: term,\n    children: term\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this)]\n}, void 0, true);\n\n_c3 = TermButton;\n\nconst TermSelector = ({\n  term,\n  setTerm\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"btn-group\",\n  children: Object.values(terms).map(value => /*#__PURE__*/_jsxDEV(TermButton, {\n    term: value,\n    setTerm: setTerm,\n    checked: value === term\n  }, value, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 7\n  }, this))\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 67,\n  columnNumber: 3\n}, this);\n\n_c4 = TermSelector;\n\nconst getCourseTerm = course => terms[course.id.charAt(0)];\n\nconst getCourseNumber = course => course.id.slice(1, 4);\n\nconst days = ['M', 'Tu', 'W', 'Th', 'F'];\n\nconst daysOverlap = (days1, days2) => days.some(day => days1.includes(day) && days2.includes(day));\n\nconst hoursOverlap = (hours1, hours2) => Math.max(hours1.start, hours2.start) < Math.min(hours1.end, hours2.end);\n\nconst timeConflict = (course1, course2) => daysOverlap(course1.days, course2.days) && hoursOverlap(course1.hours, course2.hours);\n\nconst courseConflict = (course1, course2) => getCourseTerm(course1) === getCourseTerm(course2) && timeConflict(course1, course2);\n\nconst mapValues = (fn, obj) => Object.fromEntries(Object.entries(obj).map(([key, value]) => [key, fn(value)]));\n\nconst addCourseTimes = course => ({ ...course,\n  ...timeParts(course.meets)\n});\n\nconst addScheduleTimes = schedule => ({\n  title: schedule.title,\n  courses: mapValues(addCourseTimes, schedule.courses)\n});\n\nconst meetsPat = /^ *((?:M|Tu|W|Th|F)+) +(\\d\\d?):(\\d\\d) *[ -] *(\\d\\d?):(\\d\\d) *$/;\n\nconst timeParts = meets => {\n  const [match, days, hh1, mm1, hh2, mm2] = meetsPat.exec(meets) || [];\n  return !match ? {} : {\n    days,\n    hours: {\n      start: hh1 * 60 + mm1 * 1,\n      end: hh2 * 60 + mm2 * 1\n    }\n  };\n};\n\nconst hasConflict = (course, selected) => selected.some(selection => courseConflict(course, selection));\n\nconst toggle = (x, lst) => lst.includes(x) ? lst.filter(y => y !== x) : [x, ...lst];\n\nconst Course = ({\n  course,\n  selected,\n  setSelected\n}) => {\n  const isSelected = selected.includes(course);\n  const isDisabled = !isSelected && hasConflict(course, selected);\n  const style = {\n    backgroundColor: isDisabled ? 'lightgrey' : isSelected ? 'lightgreen' : 'white'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card m-1 p-2\",\n    style: style,\n    onClick: isDisabled ? null : () => setSelected(toggle(course, selected)),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-title\",\n        children: [getCourseTerm(course), \" CS \", getCourseNumber(course)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-text\",\n        children: course.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n};\n\n_c5 = Course;\n\nconst App = () => {\n  _s2();\n\n  const [schedule, setSchedule] = useState();\n  const url = 'https://courses.cs.northwestern.edu/394/data/cs-courses.php';\n  useEffect(() => {\n    const fetchSchedule = async () => {\n      const response = await fetch(url);\n      if (!response.ok) throw response;\n      const json = await response.json();\n      setSchedule(addScheduleTimes(json));\n    };\n\n    fetchSchedule();\n  }, []);\n  if (!schedule) return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Loading schedule...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Banner, {\n      title: schedule.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CourseList, {\n      courses: schedule.courses\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(App, \"Hk/40GQ0++PThJxhQe6wHGL8lko=\");\n\n_c6 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"Banner\");\n$RefreshReg$(_c2, \"CourseList\");\n$RefreshReg$(_c3, \"TermButton\");\n$RefreshReg$(_c4, \"TermSelector\");\n$RefreshReg$(_c5, \"Course\");\n$RefreshReg$(_c6, \"App\");","map":{"version":3,"sources":["/Users/tangkailai/Desktop/NU_CS/CS_497/scheduler/src/App.js"],"names":["React","useState","useEffect","schedule","Banner","title","CourseList","courses","term","setTerm","selected","setSelected","termCourses","Object","values","filter","course","getCourseTerm","map","id","terms","F","W","S","TermButton","checked","TermSelector","value","charAt","getCourseNumber","slice","days","daysOverlap","days1","days2","some","day","includes","hoursOverlap","hours1","hours2","Math","max","start","min","end","timeConflict","course1","course2","hours","courseConflict","mapValues","fn","obj","fromEntries","entries","key","addCourseTimes","timeParts","meets","addScheduleTimes","meetsPat","match","hh1","mm1","hh2","mm2","exec","hasConflict","selection","toggle","x","lst","y","Course","isSelected","isDisabled","style","backgroundColor","App","setSchedule","url","fetchSchedule","response","fetch","ok","json"],"mappings":"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","sourcesContent":["import './App.css';\nimport React, { useState, useEffect } from 'react';\n\nconst schedule = {\n  \"title\": \"CS Courses for 2018-2019\",\n  \"courses\": {\n    \"F101\" : {\n      \"id\" : \"F101\",\n      \"meets\" : \"MWF 11:00-11:50\",\n      \"title\" : \"Computer Science: Concepts, Philosophy, and Connections\"\n    },\n    \"F110\" : {\n      \"id\" : \"F110\",\n      \"meets\" : \"MWF 10:00-10:50\",\n      \"title\" : \"Intro Programming for non-majors\"\n    },\n    \"S313\" : {\n      \"id\" : \"S313\",\n      \"meets\" : \"TuTh 15:30-16:50\",\n      \"title\" : \"Tangible Interaction Design and Learning\"\n    },\n    \"S314\" : {\n      \"id\" : \"S314\",\n      \"meets\" : \"TuTh 9:30-10:50\",\n      \"title\" : \"Tech & Human Interaction\"\n    }\n  }\n};\n\nconst Banner = ({ title }) => (\n  <h1>{ title }</h1>\n);\n\nconst CourseList = ({ courses }) => {\n  const [term, setTerm] = useState('Fall');\n  const [selected, setSelected] = useState([]);\n  const termCourses = Object.values(courses).filter(course => term === getCourseTerm(course));\n  \n  return (\n    <>\n      <TermSelector term={term} setTerm={setTerm} />\n      <div className=\"course-list\">\n      { \n        termCourses.map(course =>\n          <Course key={ course.id } course={ course }\n            selected={selected} setSelected={ setSelected } \n          />) \n      }\n      </div>\n    </>\n  );\n};\n\nconst terms = { F: 'Fall', W: 'Winter', S: 'Spring'};\n\nconst TermButton = ({term, setTerm, checked}) => (\n  <>\n    <input type=\"radio\" id={term} className=\"btn-check\" checked={checked} autoComplete=\"off\"\n      onChange={() => setTerm(term)} />\n    <label class=\"btn btn-success m-1 p-2\" htmlFor={term}>\n    { term }\n    </label>\n  </>\n);\n\nconst TermSelector = ({term, setTerm}) => (\n  <div className=\"btn-group\">\n  { \n    Object.values(terms).map(value => (\n      <TermButton key={value} term={value} setTerm={setTerm} checked={value === term} />\n    ))\n  }\n  </div>\n);\n\nconst getCourseTerm = course => (\n  terms[course.id.charAt(0)]\n);\n\nconst getCourseNumber = course => (\n  course.id.slice(1, 4)\n);\n\nconst days = ['M', 'Tu', 'W', 'Th', 'F'];\n\nconst daysOverlap = (days1, days2) => ( \n  days.some(day => days1.includes(day) && days2.includes(day))\n);\n\nconst hoursOverlap = (hours1, hours2) => (\n  Math.max(hours1.start, hours2.start) < Math.min(hours1.end, hours2.end)\n);\n\nconst timeConflict = (course1, course2) => (\n  daysOverlap(course1.days, course2.days) && hoursOverlap(course1.hours, course2.hours)\n);\n\nconst courseConflict = (course1, course2) => (\n  getCourseTerm(course1) === getCourseTerm(course2)\n  && timeConflict(course1, course2)\n);\n\nconst mapValues = (fn, obj) => (\n  Object.fromEntries(Object.entries(obj).map(([key, value]) => [key, fn(value)]))\n);\n\nconst addCourseTimes = course => ({\n  ...course,\n  ...timeParts(course.meets)\n});\n\nconst addScheduleTimes = schedule => ({\n  title: schedule.title,\n  courses: mapValues(addCourseTimes, schedule.courses)\n});\n\nconst meetsPat = /^ *((?:M|Tu|W|Th|F)+) +(\\d\\d?):(\\d\\d) *[ -] *(\\d\\d?):(\\d\\d) *$/;\n\nconst timeParts = meets => {\n  const [match, days, hh1, mm1, hh2, mm2] = meetsPat.exec(meets) || [];\n  return !match ? {} : {\n    days,\n    hours: {\n      start: hh1 * 60 + mm1 * 1,\n      end: hh2 * 60 + mm2 * 1\n    }\n  };\n};\n\nconst hasConflict = (course, selected) => (\n  selected.some(selection => courseConflict(course, selection))\n);\n\nconst toggle = (x, lst) => (\n  lst.includes(x) ? lst.filter(y => y !== x) : [x, ...lst]\n);\n\nconst Course = ({ course, selected, setSelected }) => {\n  const isSelected = selected.includes(course);\n  const isDisabled = !isSelected && hasConflict(course, selected);\n  const style = {\n    backgroundColor: isDisabled? 'lightgrey' : isSelected ? 'lightgreen' : 'white'\n  };\n  return (\n    <div className=\"card m-1 p-2\" \n      style={style}\n      onClick={isDisabled ? null : () =>  setSelected(toggle(course, selected))}>\n      <div className=\"card-body\">\n        <div className=\"card-title\">{ getCourseTerm(course) } CS { getCourseNumber(course) }</div>\n        <div className=\"card-text\">{ course.title }</div>\n      </div>\n    </div>\n  );\n};\n\nconst App = () => {\n  const [schedule, setSchedule] = useState();\n  const url = 'https://courses.cs.northwestern.edu/394/data/cs-courses.php';\n\n  useEffect(() => {\n    const fetchSchedule = async () => {\n      const response = await fetch(url);\n      if (!response.ok) throw response;\n      const json = await response.json();\n      setSchedule(addScheduleTimes(json));\n    }\n    fetchSchedule();\n  }, []);\n  if (!schedule) return <h1>Loading schedule...</h1>;\n\n  return (\n    <div className=\"container\">\n      <Banner title={ schedule.title } />\n      <CourseList courses={ schedule.courses } />\n    </div>\n  );\n};\n\nexport default App;"]},"metadata":{},"sourceType":"module"}