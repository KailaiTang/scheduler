{"ast":null,"code":"var _jsxFileName = \"/Users/tangkailai/Desktop/NU_CS/CS_497/scheduler/src/components/CourseList.js\",\n    _s = $RefreshSig$();\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const CourseList = ({\n  courses\n}) => {\n  _s();\n\n  const [term, setTerm] = useState('Fall');\n  const [selected, setSelected] = useState([]);\n  const termCourses = Object.values(courses).filter(course => term === getCourseTerm(course));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TermSelector, {\n      term: term,\n      setTerm: setTerm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"course-list\",\n      children: termCourses.map(course => /*#__PURE__*/_jsxDEV(Course, {\n        course: course,\n        selected: selected,\n        setSelected: setSelected\n      }, course.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CourseList, \"h0WUCS4RgDfJRjhlk8hM/990ywg=\");\n\n_c = CourseList;\n\nconst Course = ({\n  course,\n  selected,\n  setSelected\n}) => {\n  const isSelected = selected.includes(course);\n  const isDisabled = !isSelected && hasConflict(course, selected);\n  const style = {\n    backgroundColor: isDisabled ? 'lightgrey' : isSelected ? 'lightgreen' : 'white'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card m-1 p-2\",\n    style: style,\n    onClick: isDisabled ? null : () => setSelected(toggle(course, selected)),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-title\",\n        children: [getCourseTerm(course), \" CS \", getCourseNumber(course)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-text\",\n        children: course.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Course;\n\nconst TermSelector = ({\n  term,\n  setTerm\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"btn-group\",\n  children: Object.values(terms).map(value => /*#__PURE__*/_jsxDEV(TermButton, {\n    term: value,\n    setTerm: setTerm,\n    checked: value === term\n  }, value, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 7\n  }, this))\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 40,\n  columnNumber: 3\n}, this);\n\n_c3 = TermSelector;\n\nconst getCourseNumber = course => course.id.slice(1, 4);\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"CourseList\");\n$RefreshReg$(_c2, \"Course\");\n$RefreshReg$(_c3, \"TermSelector\");","map":{"version":3,"sources":["/Users/tangkailai/Desktop/NU_CS/CS_497/scheduler/src/components/CourseList.js"],"names":["CourseList","courses","term","setTerm","useState","selected","setSelected","termCourses","Object","values","filter","course","getCourseTerm","map","id","Course","isSelected","includes","isDisabled","hasConflict","style","backgroundColor","toggle","getCourseNumber","title","TermSelector","terms","value","slice"],"mappings":";;;;;AAAA,OAAO,MAAMA,UAAU,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAAA;;AACzC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBC,QAAQ,CAAC,MAAD,CAAhC;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BF,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAMG,WAAW,GAAGC,MAAM,CAACC,MAAP,CAAcR,OAAd,EAAuBS,MAAvB,CAA8BC,MAAM,IAAIT,IAAI,KAAKU,aAAa,CAACD,MAAD,CAA9D,CAApB;AAEA,sBACE;AAAA,4BACE,QAAC,YAAD;AAAc,MAAA,IAAI,EAAET,IAApB;AAA0B,MAAA,OAAO,EAAEC;AAAnC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,gBAEEI,WAAW,CAACM,GAAZ,CAAgBF,MAAM,iBACpB,QAAC,MAAD;AAA0B,QAAA,MAAM,EAAGA,MAAnC;AACE,QAAA,QAAQ,EAAEN,QADZ;AACsB,QAAA,WAAW,EAAGC;AADpC,SAAcK,MAAM,CAACG,EAArB;AAAA;AAAA;AAAA;AAAA,cADF;AAFF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAaD,CAlBM;;GAAMd,U;;KAAAA,U;;AAoBb,MAAMe,MAAM,GAAG,CAAC;AAAEJ,EAAAA,MAAF;AAAUN,EAAAA,QAAV;AAAoBC,EAAAA;AAApB,CAAD,KAAuC;AACpD,QAAMU,UAAU,GAAGX,QAAQ,CAACY,QAAT,CAAkBN,MAAlB,CAAnB;AACA,QAAMO,UAAU,GAAG,CAACF,UAAD,IAAeG,WAAW,CAACR,MAAD,EAASN,QAAT,CAA7C;AACA,QAAMe,KAAK,GAAG;AACZC,IAAAA,eAAe,EAAEH,UAAU,GAAE,WAAF,GAAgBF,UAAU,GAAG,YAAH,GAAkB;AAD3D,GAAd;AAGA,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AACE,IAAA,KAAK,EAAEI,KADT;AAEE,IAAA,OAAO,EAAEF,UAAU,GAAG,IAAH,GAAU,MAAOZ,WAAW,CAACgB,MAAM,CAACX,MAAD,EAASN,QAAT,CAAP,CAFjD;AAAA,2BAGE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,mBAA8BO,aAAa,CAACD,MAAD,CAA3C,UAA2DY,eAAe,CAACZ,MAAD,CAA1E;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,kBAA6BA,MAAM,CAACa;AAApC;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAhBD;;MAAMT,M;;AAkBN,MAAMU,YAAY,GAAG,CAAC;AAACvB,EAAAA,IAAD;AAAOC,EAAAA;AAAP,CAAD,kBACnB;AAAK,EAAA,SAAS,EAAC,WAAf;AAAA,YAEEK,MAAM,CAACC,MAAP,CAAciB,KAAd,EAAqBb,GAArB,CAAyBc,KAAK,iBAC5B,QAAC,UAAD;AAAwB,IAAA,IAAI,EAAEA,KAA9B;AAAqC,IAAA,OAAO,EAAExB,OAA9C;AAAuD,IAAA,OAAO,EAAEwB,KAAK,KAAKzB;AAA1E,KAAiByB,KAAjB;AAAA;AAAA;AAAA;AAAA,UADF;AAFF;AAAA;AAAA;AAAA;AAAA,QADF;;MAAMF,Y;;AAUN,MAAMF,eAAe,GAAGZ,MAAM,IAC5BA,MAAM,CAACG,EAAP,CAAUc,KAAV,CAAgB,CAAhB,EAAmB,CAAnB,CADF","sourcesContent":["export const CourseList = ({ courses }) => {\n  const [term, setTerm] = useState('Fall');\n  const [selected, setSelected] = useState([]);\n  const termCourses = Object.values(courses).filter(course => term === getCourseTerm(course));\n  \n  return (\n    <>\n      <TermSelector term={term} setTerm={setTerm} />\n      <div className=\"course-list\">\n      { \n        termCourses.map(course =>\n          <Course key={ course.id } course={ course }\n            selected={selected} setSelected={ setSelected } \n          />) \n      }\n      </div>\n    </>\n  );\n};\n\nconst Course = ({ course, selected, setSelected }) => {\n  const isSelected = selected.includes(course);\n  const isDisabled = !isSelected && hasConflict(course, selected);\n  const style = {\n    backgroundColor: isDisabled? 'lightgrey' : isSelected ? 'lightgreen' : 'white'\n  };\n  return (\n    <div className=\"card m-1 p-2\" \n      style={style}\n      onClick={isDisabled ? null : () =>  setSelected(toggle(course, selected))}>\n      <div className=\"card-body\">\n        <div className=\"card-title\">{ getCourseTerm(course) } CS { getCourseNumber(course) }</div>\n        <div className=\"card-text\">{ course.title }</div>\n      </div>\n    </div>\n  );\n};\n\nconst TermSelector = ({term, setTerm}) => (\n  <div className=\"btn-group\">\n  { \n    Object.values(terms).map(value => (\n      <TermButton key={value} term={value} setTerm={setTerm} checked={value === term} />\n    ))\n  }\n  </div>\n);\n\nconst getCourseNumber = course => (\n  course.id.slice(1, 4)\n);"]},"metadata":{},"sourceType":"module"}