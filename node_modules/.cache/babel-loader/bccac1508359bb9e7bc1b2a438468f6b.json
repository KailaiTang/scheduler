{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { initializeApp } from 'firebase/app';\nimport { getDatabase, onValue, ref, set } from 'firebase/database'; // Your web app's Firebase configuration\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBCQQhCIFW-nefn5_zKn8TEMEuZxn-VQto\",\n  authDomain: \"actions-builder-sdk-3a084.firebaseapp.com\",\n  databaseURL: \"https://actions-builder-sdk-3a084.firebaseio.com\",\n  projectId: \"actions-builder-sdk-3a084\",\n  storageBucket: \"actions-builder-sdk-3a084.appspot.com\",\n  messagingSenderId: \"800885434356\",\n  appId: \"1:800885434356:web:d1a5b33260fcb601eafba1\"\n};\nconst firebase = initializeApp(firebaseConfig);\nconst database = getDatabase(firebase);\nexport const useData = (path, transform) => {\n  _s();\n\n  const [data, setData] = useState();\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState();\n  useEffect(() => {\n    const dbRef = ref(database, path);\n    return onValue(dbRef, snapshot => {\n      const val = snapshot.val();\n      setData(transform ? transform(val) : val);\n      setLoading(false);\n      setError(null);\n    }, error => {\n      setData(null);\n      setLoading(false);\n      setError(error);\n    });\n  }, [path, transform]);\n  return [data, loading, error];\n};\n\n_s(useData, \"NHGwgwF0D09hI9K12vQBrfPMsF4=\");","map":{"version":3,"sources":["/Users/tangkailai/Desktop/NU_CS/CS_497/scheduler/src/utilities/firebase.js"],"names":["initializeApp","getDatabase","onValue","ref","set","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebase","database","useData","path","transform","data","setData","useState","loading","setLoading","error","setError","useEffect","dbRef","snapshot","val"],"mappings":";;AAAA,SAASA,aAAT,QAA8B,cAA9B;AACA,SAASC,WAAT,EAAsBC,OAAtB,EAA+BC,GAA/B,EAAoCC,GAApC,QAA+C,mBAA/C,C,CAEA;;AACA,MAAMC,cAAc,GAAG;AACnBC,EAAAA,MAAM,EAAE,yCADW;AAEnBC,EAAAA,UAAU,EAAE,2CAFO;AAGnBC,EAAAA,WAAW,EAAE,kDAHM;AAInBC,EAAAA,SAAS,EAAE,2BAJQ;AAKnBC,EAAAA,aAAa,EAAE,uCALI;AAMnBC,EAAAA,iBAAiB,EAAE,cANA;AAOnBC,EAAAA,KAAK,EAAE;AAPY,CAAvB;AAUA,MAAMC,QAAQ,GAAGb,aAAa,CAACK,cAAD,CAA9B;AACA,MAAMS,QAAQ,GAAGb,WAAW,CAACY,QAAD,CAA5B;AAEA,OAAO,MAAME,OAAO,GAAG,CAACC,IAAD,EAAOC,SAAP,KAAqB;AAAA;;AACxC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBC,QAAQ,EAAhC;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBF,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,EAAlC;AAEAK,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMC,KAAK,GAAGvB,GAAG,CAACW,QAAD,EAAWE,IAAX,CAAjB;AACA,WAAOd,OAAO,CAACwB,KAAD,EAASC,QAAD,IAAc;AAClC,YAAMC,GAAG,GAAGD,QAAQ,CAACC,GAAT,EAAZ;AACAT,MAAAA,OAAO,CAACF,SAAS,GAAGA,SAAS,CAACW,GAAD,CAAZ,GAAoBA,GAA9B,CAAP;AACAN,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,KALa,EAKVD,KAAD,IAAW;AACZJ,MAAAA,OAAO,CAAC,IAAD,CAAP;AACAG,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,KATa,CAAd;AAUD,GAZQ,EAYN,CAACP,IAAD,EAAOC,SAAP,CAZM,CAAT;AAaA,SAAO,CAACC,IAAD,EAAOG,OAAP,EAAgBE,KAAhB,CAAP;AACD,CAnBI;;GAAMR,O","sourcesContent":["import { initializeApp } from 'firebase/app';\nimport { getDatabase, onValue, ref, set } from 'firebase/database';\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n    apiKey: \"AIzaSyBCQQhCIFW-nefn5_zKn8TEMEuZxn-VQto\",\n    authDomain: \"actions-builder-sdk-3a084.firebaseapp.com\",\n    databaseURL: \"https://actions-builder-sdk-3a084.firebaseio.com\",\n    projectId: \"actions-builder-sdk-3a084\",\n    storageBucket: \"actions-builder-sdk-3a084.appspot.com\",\n    messagingSenderId: \"800885434356\",\n    appId: \"1:800885434356:web:d1a5b33260fcb601eafba1\"\n  };\n\nconst firebase = initializeApp(firebaseConfig);\nconst database = getDatabase(firebase);\n\nexport const useData = (path, transform) => {\n    const [data, setData] = useState();\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState();\n  \n    useEffect(() => {\n      const dbRef = ref(database, path);\n      return onValue(dbRef, (snapshot) => {\n        const val = snapshot.val();\n        setData(transform ? transform(val) : val);\n        setLoading(false);\n        setError(null);\n      }, (error) => {\n        setData(null);\n        setLoading(false);\n        setError(error);\n      });\n    }, [path, transform]);\n    return [data, loading, error];\n  };"]},"metadata":{},"sourceType":"module"}