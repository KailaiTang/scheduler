{"ast":null,"code":"var _jsxFileName = \"/Users/tangkailai/Desktop/NU_CS/CS_497/scheduler/src/components/CourseList.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { getCourseTerm, hasConflict, terms } from \"../utilities/times\";\nimport React, { useState } from 'react';\nimport { setData, getUserState, getMeetingData } from \"../utilities/firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const CourseList = ({\n  courses\n}) => {\n  _s();\n\n  const [term, setTerm] = useState('Fall');\n  const [selected, setSelected] = useState([]);\n  const termCourses = Object.values(courses).filter(course => term === getCourseTerm(course));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TermSelector, {\n      term: term,\n      setTerm: setTerm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"course-list\",\n      children: termCourses.map(course => /*#__PURE__*/_jsxDEV(Course, {\n        course: course,\n        selected: selected,\n        setSelected: setSelected\n      }, course.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CourseList, \"h0WUCS4RgDfJRjhlk8hM/990ywg=\");\n\n_c = CourseList;\n\nconst Course = ({\n  course,\n  selected,\n  setSelected\n}) => {\n  _s2();\n\n  const isSelected = selected.includes(course);\n  const isDisabled = hasConflict(course, selected);\n  const [user] = useUserState();\n  const style = {\n    backgroundColor: isDisabled ? 'lightgrey' : isSelected ? 'lightgreen' : 'white'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card m-1 p-2\",\n    style: style,\n    onClick: isDisabled ? null : () => setSelected(toggle(course, selected)),\n    onDoubleClick: !user ? null : () => reschedule(course, getMeetingData(course)),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-title\",\n        children: [getCourseTerm(course), \" CS \", getCourseNumber(course)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-text\",\n        children: course.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-text\",\n        children: course.meets\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(Course, \"UKrGTS+2tpbFdkCrn7luqsvYRv8=\", true);\n\n_c2 = Course;\n\nconst getCourseMeetingData = course => {\n  const meets = prompt('Enter meeting data: MTuWThF hh:mm-hh:mm', course.meets);\n  const valid = !meets || timeParts(meets).days;\n  if (valid) return meets;\n  alert('Invalid meeting data');\n  return null;\n};\n\nconst reschedule = async (course, meets) => {\n  if (meets && window.confirm(`Change ${course.id} to ${meets}?`)) {\n    try {\n      await setData(`schedule/courses/${course.id}/meets`, meets);\n    } catch (error) {\n      alert(error);\n    }\n  }\n};\n\nconst TermSelector = ({\n  term,\n  setTerm\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"btn-group\",\n  children: Object.values(terms).map(value => /*#__PURE__*/_jsxDEV(TermButton, {\n    term: value,\n    setTerm: setTerm,\n    checked: value === term\n  }, value, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 7\n  }, this))\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 67,\n  columnNumber: 3\n}, this);\n\n_c3 = TermSelector;\n\nconst getCourseNumber = course => course.id.slice(1, 4);\n\nconst toggle = (x, lst) => lst.includes(x) ? lst.filter(y => y !== x) : [x, ...lst];\n\nexport const TermButton = ({\n  term,\n  setTerm,\n  checked\n}) => /*#__PURE__*/_jsxDEV(_Fragment, {\n  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n    type: \"radio\",\n    id: term,\n    className: \"btn-check\",\n    checked: checked,\n    autoComplete: \"off\",\n    onChange: () => setTerm(term)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n    class: \"btn btn-success m-1 p-2\",\n    htmlFor: term,\n    children: term\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this)]\n}, void 0, true);\n_c4 = TermButton;\nconst meetsPat = /^ *((?:M|Tu|W|Th|F)+) +(\\d\\d?):(\\d\\d) *[ -] *(\\d\\d?):(\\d\\d) *$/;\nexport const timeParts = meets => {\n  const [match, days, hh1, mm1, hh2, mm2] = meetsPat.exec(meets) || [];\n  return !match ? {} : {\n    days,\n    hours: {\n      start: hh1 * 60 + mm1 * 1,\n      end: hh2 * 60 + mm2 * 1\n    }\n  };\n};\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"CourseList\");\n$RefreshReg$(_c2, \"Course\");\n$RefreshReg$(_c3, \"TermSelector\");\n$RefreshReg$(_c4, \"TermButton\");","map":{"version":3,"sources":["/Users/tangkailai/Desktop/NU_CS/CS_497/scheduler/src/components/CourseList.js"],"names":["getCourseTerm","hasConflict","terms","React","useState","setData","getUserState","getMeetingData","CourseList","courses","term","setTerm","selected","setSelected","termCourses","Object","values","filter","course","map","id","Course","isSelected","includes","isDisabled","user","useUserState","style","backgroundColor","toggle","reschedule","getCourseNumber","title","meets","getCourseMeetingData","prompt","valid","timeParts","days","alert","window","confirm","error","TermSelector","value","slice","x","lst","y","TermButton","checked","meetsPat","match","hh1","mm1","hh2","mm2","exec","hours","start","end"],"mappings":"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","sourcesContent":["import { getCourseTerm, hasConflict, terms } from \"../utilities/times\";\nimport React, { useState} from 'react';\nimport { setData, getUserState, getMeetingData } from \"../utilities/firebase\";\n\nexport const CourseList = ({ courses }) => {\n  const [term, setTerm] = useState('Fall');\n  const [selected, setSelected] = useState([]);\n  const termCourses = Object.values(courses).filter(course => term === getCourseTerm(course));\n  \n  return (\n    <>\n      <TermSelector term={term} setTerm={setTerm} />\n      <div className=\"course-list\">\n      { \n        termCourses.map(course =>\n          <Course key={ course.id } course={ course }\n            selected={selected} setSelected={ setSelected } \n          />) \n      }\n      </div>\n    </>\n  );\n};\n\nconst Course = ({ course, selected, setSelected }) => {\n  const isSelected = selected.includes(course);\n  const isDisabled = hasConflict(course, selected);\n  const [user] = useUserState();\n  const style = {\n    backgroundColor: isDisabled? 'lightgrey' : isSelected ? 'lightgreen' : 'white'\n  };\n\n  return (\n    <div className=\"card m-1 p-2\" \n        style={style}\n        onClick={(isDisabled) ? null : () => setSelected(toggle(course, selected))}\n        onDoubleClick={!user ? null : () => reschedule(course, getMeetingData(course))}>\n      <div className=\"card-body\">\n        <div className=\"card-title\">{ getCourseTerm(course) } CS { getCourseNumber(course) }</div>\n        <div className=\"card-text\">{ course.title }</div>\n        <div className=\"card-text\">{ course.meets }</div>\n      </div>\n    </div>\n  );\n};\n\nconst getCourseMeetingData = course => {\n  const meets = prompt('Enter meeting data: MTuWThF hh:mm-hh:mm', course.meets);\n  const valid = !meets || timeParts(meets).days;\n  if (valid) return meets;\n  alert('Invalid meeting data');\n  return null;\n};\n\nconst reschedule = async (course, meets) => {\n  if (meets && window.confirm(`Change ${course.id} to ${meets}?`)) {\n    try {\n      await setData(`schedule/courses/${course.id}/meets`, meets);\n    } catch (error) {\n      alert(error);\n    }\n  }\n};\n\n\nconst TermSelector = ({term, setTerm}) => (\n  <div className=\"btn-group\">\n  { \n    Object.values(terms).map(value => (\n      <TermButton key={value} term={value} setTerm={setTerm} checked={value === term} />\n    ))\n  }\n  </div>\n);\n\nconst getCourseNumber = course => (\n  course.id.slice(1, 4)\n);\n\nconst toggle = (x, lst) => (\n  lst.includes(x) ? lst.filter(y => y !== x) : [x, ...lst]\n);\n\nexport const TermButton = ({term, setTerm, checked}) => (\n  <>\n    <input type=\"radio\" id={term} className=\"btn-check\" checked={checked} autoComplete=\"off\"\n      onChange={() => setTerm(term)} />\n    <label class=\"btn btn-success m-1 p-2\" htmlFor={term}>\n    { term }\n    </label>\n  </>\n);\n\nconst meetsPat = /^ *((?:M|Tu|W|Th|F)+) +(\\d\\d?):(\\d\\d) *[ -] *(\\d\\d?):(\\d\\d) *$/;\n\nexport const timeParts = meets => {\n  const [match, days, hh1, mm1, hh2, mm2] = meetsPat.exec(meets) || [];\n  return !match ? {} : {\n    days,\n    hours: {\n      start: hh1 * 60 + mm1 * 1,\n      end: hh2 * 60 + mm2 * 1\n    }\n  };\n};\n\n"]},"metadata":{},"sourceType":"module"}