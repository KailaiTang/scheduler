{"ast":null,"code":"var _jsxFileName = \"/Users/tangkailai/Desktop/NU_CS/CS_497/scheduler/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport { hasConflict } from './utilities/times.js';\nimport { CourseList } from './components/CourseList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst schedule = {\n  \"title\": \"CS Courses for 2018-2019\",\n  \"courses\": {\n    \"F101\": {\n      \"id\": \"F101\",\n      \"meets\": \"MWF 11:00-11:50\",\n      \"title\": \"Computer Science: Concepts, Philosophy, and Connections\"\n    },\n    \"F110\": {\n      \"id\": \"F110\",\n      \"meets\": \"MWF 10:00-10:50\",\n      \"title\": \"Intro Programming for non-majors\"\n    },\n    \"S313\": {\n      \"id\": \"S313\",\n      \"meets\": \"TuTh 15:30-16:50\",\n      \"title\": \"Tangible Interaction Design and Learning\"\n    },\n    \"S314\": {\n      \"id\": \"S314\",\n      \"meets\": \"TuTh 9:30-10:50\",\n      \"title\": \"Tech & Human Interaction\"\n    }\n  }\n};\n\nconst Banner = ({\n  title\n}) => /*#__PURE__*/_jsxDEV(\"h1\", {\n  children: title\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 33,\n  columnNumber: 3\n}, this);\n\n_c = Banner;\n\nconst App = () => {\n  _s();\n\n  const [schedule, setSchedule] = useState();\n  const url = 'https://courses.cs.northwestern.edu/394/data/cs-courses.php';\n  useEffect(() => {\n    const fetchSchedule = async () => {\n      const response = await fetch(url);\n      if (!response.ok) throw response;\n      const json = await response.json();\n      setSchedule(addScheduleTimes(json));\n    };\n\n    fetchSchedule();\n  }, []);\n  if (!schedule) return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Loading schedule...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Banner, {\n      title: schedule.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CourseList, {\n      courses: schedule.courses\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"Hk/40GQ0++PThJxhQe6wHGL8lko=\");\n\n_c2 = App;\n\nconst addScheduleTimes = schedule => ({\n  title: schedule.title,\n  courses: mapValues(addCourseTimes, schedule.courses)\n});\n\nconst addCourseTimes = course => ({ ...course,\n  ...timeParts(course.meets)\n});\n\nconst meetsPat = /^ *((?:M|Tu|W|Th|F)+) +(\\d\\d?):(\\d\\d) *[ -] *(\\d\\d?):(\\d\\d) *$/;\n\nconst timeParts = meets => {\n  const [match, days, hh1, mm1, hh2, mm2] = meetsPat.exec(meets) || [];\n  return !match ? {} : {\n    days,\n    hours: {\n      start: hh1 * 60 + mm1 * 1,\n      end: hh2 * 60 + mm2 * 1\n    }\n  };\n};\n\nconst mapValues = (fn, obj) => Object.fromEntries(Object.entries(obj).map(([key, value]) => [key, fn(value)]));\n\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Banner\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/Users/tangkailai/Desktop/NU_CS/CS_497/scheduler/src/App.js"],"names":["React","useState","useEffect","hasConflict","CourseList","schedule","Banner","title","App","setSchedule","url","fetchSchedule","response","fetch","ok","json","addScheduleTimes","courses","mapValues","addCourseTimes","course","timeParts","meets","meetsPat","match","days","hh1","mm1","hh2","mm2","exec","hours","start","end","fn","obj","Object","fromEntries","entries","map","key","value"],"mappings":"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","sourcesContent":["import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport {hasConflict} from './utilities/times.js';\nimport {CourseList} from './components/CourseList';\n\nconst schedule = {\n  \"title\": \"CS Courses for 2018-2019\",\n  \"courses\": {\n    \"F101\" : {\n      \"id\" : \"F101\",\n      \"meets\" : \"MWF 11:00-11:50\",\n      \"title\" : \"Computer Science: Concepts, Philosophy, and Connections\"\n    },\n    \"F110\" : {\n      \"id\" : \"F110\",\n      \"meets\" : \"MWF 10:00-10:50\",\n      \"title\" : \"Intro Programming for non-majors\"\n    },\n    \"S313\" : {\n      \"id\" : \"S313\",\n      \"meets\" : \"TuTh 15:30-16:50\",\n      \"title\" : \"Tangible Interaction Design and Learning\"\n    },\n    \"S314\" : {\n      \"id\" : \"S314\",\n      \"meets\" : \"TuTh 9:30-10:50\",\n      \"title\" : \"Tech & Human Interaction\"\n    }\n  }\n};\n\nconst Banner = ({ title }) => (\n  <h1>{ title }</h1>\n);\n\nconst App = () => {\n  const [schedule, setSchedule] = useState();\n  const url = 'https://courses.cs.northwestern.edu/394/data/cs-courses.php';\n\n  useEffect(() => {\n    const fetchSchedule = async () => {\n      const response = await fetch(url);\n      if (!response.ok) throw response;\n      const json = await response.json();\n      setSchedule(addScheduleTimes(json));\n    }\n    fetchSchedule();\n  }, []);\n  if (!schedule) return <h1>Loading schedule...</h1>;\n\n  return (\n    <div className=\"container\">\n      <Banner title={ schedule.title } />\n      <CourseList courses={ schedule.courses } />\n    </div>\n  );\n};\n  \nconst addScheduleTimes = schedule => ({\n  title: schedule.title,\n  courses: mapValues(addCourseTimes, schedule.courses)\n});\n\nconst addCourseTimes = course => ({\n  ...course,\n  ...timeParts(course.meets)\n});\n\nconst meetsPat = /^ *((?:M|Tu|W|Th|F)+) +(\\d\\d?):(\\d\\d) *[ -] *(\\d\\d?):(\\d\\d) *$/;\n  \nconst timeParts = meets => {\n  const [match, days, hh1, mm1, hh2, mm2] = meetsPat.exec(meets) || [];\n  return !match ? {} : {\n    days,\n    hours: {\n      start: hh1 * 60 + mm1 * 1,\n      end: hh2 * 60 + mm2 * 1\n    }\n  };\n};\n\nconst mapValues = (fn, obj) => (\n  Object.fromEntries(Object.entries(obj).map(([key, value]) => [key, fn(value)]))\n);\n\nexport default App;"]},"metadata":{},"sourceType":"module"}