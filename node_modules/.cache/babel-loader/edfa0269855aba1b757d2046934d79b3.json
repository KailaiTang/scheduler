{"ast":null,"code":"const days = ['M', 'Tu', 'W', 'Th', 'F'];\nexport const hasConflict = (course, selected) => selected.some(selection => courseConflict(course, selection));\n\nconst courseConflict = (course1, course2) => getCourseTerm(course1) === getCourseTerm(course2) && timeConflict(course1, course2);\n\nconst daysOverlap = (days1, days2) => days.some(day => days1.includes(day) && days2.includes(day));\n\nconst hoursOverlap = (hours1, hours2) => Math.max(hours1.start, hours2.start) < Math.min(hours1.end, hours2.end);\n\nconst timeConflict = (course1, course2) => daysOverlap(course1.days, course2.days) && hoursOverlap(course1.hours, course2.hours);","map":{"version":3,"sources":["/Users/tangkailai/Desktop/NU_CS/CS_497/scheduler/src/utilities/times.js"],"names":["days","hasConflict","course","selected","some","selection","courseConflict","course1","course2","getCourseTerm","timeConflict","daysOverlap","days1","days2","day","includes","hoursOverlap","hours1","hours2","Math","max","start","min","end","hours"],"mappings":"AAAA,MAAMA,IAAI,GAAG,CAAC,GAAD,EAAM,IAAN,EAAY,GAAZ,EAAiB,IAAjB,EAAuB,GAAvB,CAAb;AAEA,OAAO,MAAMC,WAAW,GAAG,CAACC,MAAD,EAASC,QAAT,KACzBA,QAAQ,CAACC,IAAT,CAAcC,SAAS,IAAIC,cAAc,CAACJ,MAAD,EAASG,SAAT,CAAzC,CADK;;AAIP,MAAMC,cAAc,GAAG,CAACC,OAAD,EAAUC,OAAV,KACrBC,aAAa,CAACF,OAAD,CAAb,KAA2BE,aAAa,CAACD,OAAD,CAAxC,IACGE,YAAY,CAACH,OAAD,EAAUC,OAAV,CAFjB;;AAKA,MAAMG,WAAW,GAAG,CAACC,KAAD,EAAQC,KAAR,KAChBb,IAAI,CAACI,IAAL,CAAUU,GAAG,IAAIF,KAAK,CAACG,QAAN,CAAeD,GAAf,KAAuBD,KAAK,CAACE,QAAN,CAAeD,GAAf,CAAxC,CADJ;;AAIE,MAAME,YAAY,GAAG,CAACC,MAAD,EAASC,MAAT,KACnBC,IAAI,CAACC,GAAL,CAASH,MAAM,CAACI,KAAhB,EAAuBH,MAAM,CAACG,KAA9B,IAAuCF,IAAI,CAACG,GAAL,CAASL,MAAM,CAACM,GAAhB,EAAqBL,MAAM,CAACK,GAA5B,CADzC;;AAIA,MAAMb,YAAY,GAAG,CAACH,OAAD,EAAUC,OAAV,KACnBG,WAAW,CAACJ,OAAO,CAACP,IAAT,EAAeQ,OAAO,CAACR,IAAvB,CAAX,IAA2CgB,YAAY,CAACT,OAAO,CAACiB,KAAT,EAAgBhB,OAAO,CAACgB,KAAxB,CADzD","sourcesContent":["const days = ['M', 'Tu', 'W', 'Th', 'F'];\n\nexport const hasConflict = (course, selected) => (\n  selected.some(selection => courseConflict(course, selection))\n);\n\nconst courseConflict = (course1, course2) => (\n  getCourseTerm(course1) === getCourseTerm(course2)\n  && timeConflict(course1, course2)\n);\n\nconst daysOverlap = (days1, days2) => ( \n    days.some(day => days1.includes(day) && days2.includes(day))\n  );\n  \n  const hoursOverlap = (hours1, hours2) => (\n    Math.max(hours1.start, hours2.start) < Math.min(hours1.end, hours2.end)\n  );\n  \n  const timeConflict = (course1, course2) => (\n    daysOverlap(course1.days, course2.days) && hoursOverlap(course1.hours, course2.hours)\n  );\n  "]},"metadata":{},"sourceType":"module"}